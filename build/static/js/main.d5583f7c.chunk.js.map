{"version":3,"sources":["components/Modal/index.js","App.js","serviceWorker.js","index.js"],"names":["Modal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","close","bind","assertThisInitialized","nextProps","show","react_default","a","createElement","className","onClick","children","e","target","currentTarget","Component","App","state","isShowInvite","name","email","conformEmail","error","verifyName","verifyEmail","verifyConfirmEmail","submitSuccess","sending","showInvite","hide","send","checkName","checkEmail","checkConfirmEmail","_this$state","Modal_Modal","onSubmit","type","placeholder","defaultValue","onChange","disabled","setState","v","value","test","_this$state2","preventDefault","self","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","result","JSON","parse","responseText","errorMessage","sendData","stringify","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d5583f7c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './style.scss';\n\nexport default class Modal extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.close = this.close.bind(this);\n\t}\n\tcomponentWillReceiveProps(nextProps) {\n\n\t}\n\trender() {\n\t\treturn (\n\t\t\tthis.props.show ?\n\t\t\t\t<div className=\"modal-container\" onClick={this.close}>\n\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\tnull\n\t\t);\n\t}\n\tclose(e) {\n\t\tconst {\n\t\t\tclose\n\t\t} = this.props;\n\t\tif (e.target === e.currentTarget) {\n\t\t\tclose && close();\n\t\t}\n\t}\n}","import React, { Component } from 'react';\nimport Modal from './components/Modal/';\nimport './App.scss';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      isShowInvite: false,\n      name: \"\",\n      email: \"\",\n      conformEmail: \"\",\n      error: null,\n      verifyName: \"\",\n      verifyEmail: \"\",\n      verifyConfirmEmail: \"\",\n      submitSuccess: false,\n      sending: false,\n    }\n    this.showInvite = this.showInvite.bind(this);\n    this.hide = this.hide.bind(this);\n    this.send = this.send.bind(this);\n    this.checkName = this.checkName.bind(this);\n    this.checkEmail = this.checkEmail.bind(this);\n    this.checkConfirmEmail = this.checkConfirmEmail.bind(this);\n  }\n  render() {\n    const {\n      isShowInvite,\n      name,\n      email,\n      conformEmail,\n      error,\n      verifyName,\n      verifyEmail,\n      verifyConfirmEmail,\n      submitSuccess,\n      sending\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>Broccoli & Co.</h1>\n        </header>\n        <section className=\"content\">\n          <div className=\"center\">\n            <p>\n              A batter Way\n              <br />\n              to enjoy every day\n            </p>\n            <button onClick={this.showInvite}>\n              Request an Inviste\n            </button>\n          </div>\n        </section>\n        <footer>\n          <em>\n            Made with * in Media\n            <br />\n            Â© 2019 Broccoli & Co. All rights reserved.\n          </em>\n        </footer>\n        <Modal show={isShowInvite} close={this.hide} >\n          {\n            submitSuccess ?\n              <section className=\"invite-content\">\n                <h2>All done!</h2>\n                <p>\n                  Your will be one of the first to experience\n                <br />\n                  Broccoli & Co. when we launch\n              </p>\n                <button onClick={this.hide}>\n                  Ok\n                </button>\n              </section>\n              :\n              <section className=\"invite-content\">\n                <h2>Request an invite</h2>\n                <form className=\"invite-form\" onSubmit={this.send}>\n                  <input type=\"text\" placeholder=\"Full name\" defaultValue={name} className={verifyName} onChange={this.checkName} />\n                  <br />\n                  <br />\n                  <input type=\"email\" placeholder=\"Email\" defaultValue={email} className={verifyEmail} onChange={this.checkEmail} />\n                  <br />\n                  <br />\n                  <input type=\"email\" placeholder=\"Confirm email\" defaultValue={conformEmail} className={verifyConfirmEmail} onChange={this.checkConfirmEmail} />\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                  <button disabled={sending}>\n                    {\n                      sending ? \"Sending please wait\": \"Send\"\n                    }\n                  </button>\n                  <br />\n                  {\n                    error ? <em>{error}</em> : null\n                  }\n                </form>\n              </section>\n          }\n        </Modal>\n      </div>\n    );\n  }\n\n  showInvite() {\n    this.setState({\n      isShowInvite: true\n    });\n  }\n\n  hide() {\n    this.setState({\n      isShowInvite: false\n    });\n  }\n\n  checkName(e) {\n    const v = e.target.value;\n    this.setState({\n      name: v,\n      verifyName: /^[\\u4e00-\\u9fa5A-Za-z]{3,20}|[\\u4e00-\\u9fa5]{2,8}$/i.test(v) ? \"pass\" : \"error\"\n    });\n  }\n\n  checkEmail(e) {\n    const v = e.target.value;\n    this.setState({\n      email: v,\n      verifyEmail: /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/.test(v) ? \"pass\" : \"error\"\n    });\n  }\n\n  checkConfirmEmail(e) {\n    const v = e.target.value;\n    const {\n      email\n    } = this.state;\n    this.setState({\n      conformEmail: v,\n      verifyConfirmEmail: /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/.test(v) && v === email ? \"pass\" : \"error\"\n    });\n  }\n\n  send(e) {\n    const {\n      name,\n      email,\n      verifyName,\n      verifyEmail,\n      verifyConfirmEmail,\n      sending\n    } = this.state;\n    e.preventDefault();\n    if (verifyName === \"pass\" && verifyEmail === \"pass\" && verifyConfirmEmail === \"pass\") {\n      const self = this;\n      if(sending) {\n        return false;\n      }\n      self.setState({\n        sending: true\n      });\n      let xhr = new XMLHttpRequest();\n      xhr.open(\"POST\", \"https://l94wc2001h.execute-api.ap-southeast-2.amazonaws.com/prod/fake-auth\", true);\n      xhr.setRequestHeader('content-type', 'application/json');\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            self.setState({\n              sending: false,\n              submitSuccess: true\n            });\n          } else {\n            const result = JSON.parse(xhr.responseText);\n            if (result && result.errorMessage) {\n              self.setState({\n                sending: false,\n                error: result.errorMessage\n              });\n            }\n          }\n        }\n      }\n      const sendData = {\n        name,\n        email,\n      };\n      xhr.send(JSON.stringify(sendData));\n    } else {\n      if (verifyName !== \"pass\") {\n        this.setState({\n          verifyName: \"error\"\n        });\n      } else if (verifyEmail !== \"pass\") {\n        this.setState({\n          verifyEmail: \"error\"\n        });\n      } else if (verifyConfirmEmail !== \"pass\") {\n        this.setState({\n          verifyConfirmEmail: \"error\"\n        })\n      }\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}